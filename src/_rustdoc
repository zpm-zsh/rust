#compdef rustdoc

local arguments

arguments=(
  {-h,--help}'[show help message]'
  {-V,--version}'[print rustdocs version]'
  {-v,--verbose}'[use verbose output]'
  {-r,--input-format}'[\[rust\] the input type of the specified file]'
  {-w,--output-format}'[\[html\] the output type to write]'
  {-o,--output}'[where to place the output]'
  '--crate-name[specify the name of this crate]'
  {-L,--library-path}'[directory to add to crate search path]'
  '--cfg[pass a --cfg to rustc]'
  '--extern[NAME=PATH pass an --extern to rustc]'
  '--extern-html-root-url[NAME=URL base URL to use for dependencies]'
  '--plugin-path[removed]'
  {-C,--codegen}'[OPT\[=VALUE\] pass a codegen option to rustc]'
  '--passes[list of passes to also run]'
  '--plugins[removed]'
  '--no-defaults[dont run the default passes]'
  '--document-private-items[document private items]'
  '--test[run code examples as tests]'
  '--test-args[arguments to pass to the test runner]'
  '--target[target triple to document]'
  '--markdown-css[CSS files to include via <link> in a rendered Markdown file]'
  '--html-in-header[files to include inline in the <head> section of a rendered Markdown file or generated documentation]'
  '--html-before-content[files to include inline between <body> and the content of a rendered Markdown file or generated documentation]'
  '--html-after-content[files to include inline between the content and </body> of a rendered Markdown file or generated documentation]'
  '--markdown-before-content[files to include inline between <body> and the content of a rendered Markdown file or generated documentation]'
  '--markdown-after-content[files to include inline between the content and </body> of a rendered Markdown file or generated documentation]'
  '--markdown-playground-url[URL to send code snippets to]'
  '--markdown-no-toc[dont include table of contents]'
  {-e,--extend-css}'[to add some CSS rules with a given file to generate doc with your own theme]'
  '-Z[internal and debugging options (only on nightly build)]'
  '--sysroot[override the system root]'
  '--playground-url[URL to send code snippets to]'
  '--display-warnings[to print code warnings when testing doc]'
  '--crate-version[crate version to print into documentation]'
  '--linker[linker used for building executable test code]'
  '--sort-modules-by-appearance[sort modules by where they appear in the program, rather than alphabetically]'
  '--themes[additional themes which will be added to the generated docs]'
  '--theme-checker[check if given theme is valid]'
  '--resource-suffix[suffix to add to CSS and JavaScript files]'
  '--edition[edition to use when compiling rust code]'
  '--color:configure coloring of output:(auto always never)'
  '--error-format:how errors and other messages are produced:(human json short)'
  '--disable-minification[disable minification applied on JS files]'
  {-W,--warn}'[set lint warnings]'
  {-A,--allow}'[set lint allowed]'
  {-D,--deny}'[set lint denied]'
  {-F,--forbid}'[set lint forbidden]'
  '--cap-lints[set the most restrictive lint level]'
  '--index-page[markdown file to be used as index page]'
  '--enable-index-page[to enable generation of the index page]'
  '--static-root-path[path string to force loading static files from in output pages]'
  '--disable-per-crate-search[disables generating the crate selector on the search box]'
  '--persist-doctests[directory to persist doctest executables into]'
  '--generate-redirect-pages[generate extra pages to support legacy URLs and tool links]'
  '--show-coverage[calculate percentage of public items with documentation]'
  '*:filename:_files'
)

_arguments -s $arguments
